
# sleep 100 ms => 25% rejected;
# sleep 200 ms => 60% rejected, will trip errorThresholdPercentage
hystrixdemo.sleep=10

# tag::turbine[]
turbine.instanceUrlSuffix=:8080/hystrixapp/hystrix.stream
turbine.ConfigPropertyBasedDiscovery.default.instances=localhost
turbine.ConfigPropertyBasedDiscovery.localhost.instances=localhost
# end::turbine[]

hystrixdemo.enablezabbix=false

hystrixdemo.enableriemann=false

# See
#   https://github.com/Netflix/Hystrix/wiki/Configuration
# for all configuration options of Hystrix

# How Hystrix decouples the program from the command
#   default: THREAD
#   other: SEMAPHORE
hystrix.command.default.execution.isolation.strategy=THREAD

# What is the timeout for a Hystrix command?
# default: 1000
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000

# tag::hystrixcommand[]
# Should Hystrix interrupt a command that is overdue?
# default: true
hystrix.command.default.execution.isolation.thread.interruptOnTimeout=true

# How many errors are allowed before the circuit breaker is activated?
# default: 50 (must be greater than 0,
# 100 means no breaking despite of errors)
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50

# How many requests are needed in the time span to trigger the circuit breaker?
# default: 20
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20

# After what time (in ms) should the circuit breaker try a single request?
# default: 5000
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000

# end::hystrixcommand[]
